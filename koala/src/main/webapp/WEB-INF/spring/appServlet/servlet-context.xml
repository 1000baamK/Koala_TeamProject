<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- jang: servlet-context에서는 웹 관련 된 내용들을 빈 처리하기 때문에 Service와 Repository 스캔을 제외 -->
	<context:component-scan base-package="com.hoju.koala">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
 		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>
	
	<interceptors>
		<interceptor>
			<!-- 관리자를 제외한 사람은 admin관련 페이지에 접근을 막는다. -->
			<mapping path="/admin/**"/>
			<beans:bean class="com.hoju.koala.admin.interceptor.AdminInterceptor" id="AdminInterceptor"/>
		</interceptor>
		
		<!-- 로그인 회원만 sqlCloud 이용 가능 -->
		<interceptor>
			<mapping path="/together/*"/>
			<beans:bean class="com.hoju.koala.admin.interceptor.SqlCloudInterceptor" id="SqlCloudInterceptor"/>
		</interceptor>
		
		<interceptor>
<!-- 			서포터즈로 초대가 된 후 관리자 페이지를 제외한 나머지 페이지에 접근 하는 경우 초대를 받을지 말지 확인 할 수 있도록 한다.  -->
			<mapping path="/**"/>
			<exclude-mapping path="/admin/**"/>
			<beans:bean class="com.hoju.koala.admin.interceptor.SupporterInterceptor" id="SupportInterceptor"/>
		</interceptor>
		
		<interceptor>
			<!-- 페이지 접근제한 -->
			<mapping path="/member/as"/> <!-- 사용자 계정관리 페이지 -->
			<beans:bean class="com.hoju.koala.member.interceptor.MemberInterceptor" id="MemberInterceptor"/>
		</interceptor>
	</interceptors>
	
	
	
<!-- 	<beans:bean id="onePage" class="com.hoju.koala.admin.webSocket.OnePageSocket3"/> -->
	<beans:bean id="onePage" class="com.hoju.koala.admin.webSocket.Atest"/>
	<websocket:handlers allowed-origins="*">
		<websocket:mapping handler="onePage" path="/sqlcloud"/>
		
		<websocket:handshake-interceptors>
			<beans:bean id="handshakeInterceptor" class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	
	<!-- 채팅 핸들러 설정 -->
	<websocket:handlers>
		<websocket:mapping handler="chatHandler" path="/chat"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		<websocket:sockjs/>
	</websocket:handlers>
	<!-- 채팅 빈 -->
	<beans:bean id="chatHandler" class="com.hoju.koala.member.chat.ChatHandler"/>
	
	
	
	
	
	<beans:bean id="websocketContainer"
		class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
		<beans:property name="maxTextMessageBufferSize"
			value="9999999" />
		<beans:property name="maxBinaryMessageBufferSize"
			value="9999999" />
		<beans:property name="asyncSendTimeout" value="3000" />
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/>
		<beans:property name="maxUploadSize" value="10000000"/>
		<beans:property name="maxInMemorySize" value="10000000"/>
	</beans:bean>	
	
</beans:beans>
