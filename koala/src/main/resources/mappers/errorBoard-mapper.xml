<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="errorBoardMapper">
	
	<!-- 오류게시판  -->
	<resultMap type="errorBoard" id="errorBoardResultSet" extends="boardMapper.boardResultSet">
		<result column="REF_BNO" property="refBno"/>
		<result column="REF_SNO" property="refSno"/>
		<result column="SOLVED" property="solved"/>
		<result column="ERROR_TYPE" property="errorType"/>
		<result column="MODIFIED_CODE" property="modifiedCode"/>
		<result column="MODIFIED_INFO" property="modifiedInfo"/>
	</resultMap>

	<!-- 오류게시판 조회용 -->
	<resultMap type="errorSet" id="errorSetResultSet">
		<result column="REPLY_COUNT" property="replyCount"/>
		<collection property="board" resultMap="boardMapper.boardResultSet"/>
		<collection property="errorBoard" resultMap="errorBoardResultSet"/>
		<collection property="createSetting" resultMap="adminMapper.createSettingResultSet"/>
	</resultMap>
	
	<!-- 총 게시글 수  -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE CATEGORY = 'E'
		AND STATUS = 'Y'
	</select>
	
	<!-- 검색된 게시글 수  -->
	<select id="searchListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON (BOARD_WRITER = USER_NO)
		JOIN ERROR_BOARD E ON (BOARD_NO = E.REF_BNO)
		JOIN CREATE_SETTING C ON (E.REF_SNO = C.SETTING_NO)
        <if test="category == 'writer'">
		AND M.NICKNAME LIKE '%'||#{keyword}||'%'
		</if>
		<if test="category == 'title'">
		AND B.TITLE LIKE '%'||#{keyword}||'%'
		</if>
		<if test="category == 'content'">
		AND B.CONTENT LIKE '%'||#{keyword}||'%'
		</if>
		<if test="category == 'library'">
		AND UPPER(C.SETTING_TITLE) LIKE UPPER('%'||#{keyword}||'%')
		</if>
		WHERE B.CATEGORY = 'E'
		AND B.STATUS = 'Y'
	</select>
	
	<!-- 게시글 전체 목록 조회 -->
	<select id="selectList" resultMap="errorSetResultSet">
		SELECT BOARD_NO,
		       SETTING_TITLE,
		       TITLE,
		       NICKNAME,
		       SOLVED,
		       NOTICE,
		       B.CREATE_DATE,
		       COUNT
		FROM BOARD B
		JOIN MEMBER M ON (B.BOARD_WRITER = M.USER_NO)
		JOIN ERROR_BOARD E ON (B.BOARD_NO = E.REF_BNO)
		JOIN CREATE_SETTING C ON(E.REF_SNO = C.SETTING_NO)
		WHERE B.STATUS = 'Y'
		AND B.CATEGORY = 'E'
        AND SOLVED||ERROR_TYPE != 'NS'
		ORDER BY DECODE(NOTICE,'Y',1,'N',2),
                 DECODE(SOLVED,'N',1,'Y',2),
                 CREATE_DATE DESC
	</select>
	
	<!-- 검색된 게시글 목록 조회 -->
	<select id="searchList" resultMap="errorSetResultSet" parameterType="hashMap">
		SELECT BOARD_NO,
		       SETTING_TITLE,
		       TITLE,
		       NICKNAME,
		       SOLVED,
		       NOTICE,
		       B.CREATE_DATE,
		       COUNT
		FROM BOARD B
		JOIN MEMBER M ON (B.BOARD_WRITER = M.USER_NO)
		JOIN ERROR_BOARD E ON (B.BOARD_NO = E.REF_BNO)
		JOIN CREATE_SETTING C ON(E.REF_SNO = C.SETTING_NO)
		WHERE B.STATUS = 'Y'
		AND B.CATEGORY = 'E'
        AND SOLVED||ERROR_TYPE != 'NS'
        <if test="category == 'writer'">
		AND M.NICKNAME
		</if>
		<if test="category == 'title'">
		AND B.TITLE
		</if>
		<if test="category == 'content'">
		AND B.CONTENT
		</if>
		<if test="category == 'library'">
		AND UPPER(C.SETTING_TITLE)
		</if>
		LIKE UPPER('%'||#{keyword}||'%')
		ORDER BY DECODE(NOTICE,'Y',1,'N',2),
                 DECODE(SOLVED,'N',1,'Y',2),
                 CREATE_DATE DESC
	</select>
	
	<!-- 조회수 증가 -->
	<update id="increaseCount">
		UPDATE BOARD
		SET COUNT = COUNT + 1
		WHERE BOARD_NO = #{boardNo}
		AND STATUS = 'Y'
	</update>
	
	<!-- 게시글 상세 조회   -->
	<select id="selectBoard" resultMap="errorSetResultSet">
		SELECT BOARD_NO,
			   SETTING_TITLE,
			   SETTING_VERSION,
			   SETTING_CODE,
			   NICKNAME,
			   TITLE,
			   CONTENT,
			   CREATE_DATE,
			   SOLVED,
			   ERROR_TYPE,
			   MODIFIED_CODE,
			   MODIFIED_INFO,
			   SETTING_INFO
		FROM BOARD B
		JOIN MEMBER M ON (B.BOARD_WRITER = M.USER_NO)
		JOIN ERROR_BOARD E ON (B.BOARD_NO = E.REF_BNO)
		JOIN CREATE_SETTING C ON(E.REF_SNO = C.SETTING_NO)
		WHERE BOARD_NO = #{boardNo}
		AND B.STATUS = 'Y'
	</select>
	
	<!-- 라이브러리 리스트 조회 -->
	<select id="selectLibList" resultMap="adminMapper.createSettingResultSet">
		SELECT SETTING_TITLE
		FROM CREATE_SETTING
		WHERE STATUS IN ('Y','N')
		GROUP BY SETTING_TITLE
		ORDER BY SETTING_TITLE
	</select>
	
	<!-- 버전 리스트 조회 -->
	<select id="selectVersion" resultType="string">
		SELECT SETTING_VERSION
		FROM CREATE_SETTING
		WHERE SETTING_TITLE = #{settingTitle}
		AND STATUS IN ('Y','N')
		ORDER BY 1 DESC
	</select>
	
	<!-- 세팅 글번호 조회 -->
	<select id="selectSettingNo" resultType="int">
		SELECT SETTING_NO
		FROM CREATE_SETTING
		WHERE SETTING_TITLE = #{settingTitle}
		AND SETTING_VERSION = #{settingVersion}
		AND STATUS IN ('Y','N')
	</select>
	
	<!-- 게시글 작성 시 수정폼 생성 - 코드 -->
	<select id="createCodeForm" resultType="string">
		SELECT SETTING_CODE
		FROM CREATE_SETTING
		WHERE SETTING_TITLE = #{settingTitle}
		AND SETTING_VERSION = #{settingVersion}
		AND STATUS IN ('Y','N')
	</select>

	<!-- 게시글 작성 시 수정폼 생성 - 설명서 -->
	<select id="createInfoForm" resultType="string">
		SELECT SETTING_INFO
		FROM CREATE_SETTING
		WHERE SETTING_TITLE = #{settingTitle}
		AND SETTING_VERSION = #{settingVersion}
		AND STATUS IN ('Y','N')
	</select>
	
	<!-- 게시글 등록 - Board -->
	<insert id="insertBoard">
		INSERT INTO BOARD (BOARD_NO,
						   CATEGORY,
						   BOARD_WRITER,
						   TITLE,
						   CONTENT)
				   VALUES (SEQ_BNO.NEXTVAL,
				   		   'E',
				   		   #{boardWriter},
				   		   #{title},
				   		   #{content})
	</insert>
	
	<!-- 게시글 등록 - ErrorBoard -->
	<insert id="insertErrorBoard">
		INSERT INTO ERROR_BOARD (REF_BNO,
								 REF_SNO,
								 MODIFIED_CODE,
								 MODIFIED_INFO)
						 VALUES (SEQ_BNO.CURRVAL,
								 #{refSno},
								 #{modifiedCode},
								 #{modifiedInfo})
	</insert>
	
	<!-- 게시글 수정 - Board  //확인전 -->
	<update id="updateBoard">
		UPDATE BOARD
		SET TITLE = #{boardTitle},
			CONTENT = #{boardContent},
			MODIFY_DATE = SYSDATE
		WHERE BOARD_NO = #{boardNo}
		AND STATUS = 'Y'
	</update>
	
	<!-- 게시글 수정 - ErrorBoard  //확인전 -->
	<update id="updateErrorBoard">
		UPDATE ERROR_BOARD
		SET MODIFIED_CODE = #{modifiedCode},
			MODIFIED_INFO = #{modifiedInfo}
		WHERE REF_BNO = #{boardNo}
		AND STATUS = 'Y'
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleteBoard">
		DELETE BOARD
		WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<!-- 댓글 리스트 조회 -->
	<select id="selectReplyList" resultMap="boardMapper.replyResultSet">
		SELECT REPLY_NO,
		       REPLY_CONTENT,
		       NICKNAME,
		       TO_CHAR(R.CREATE_DATE, 'YY/MM/DD AMHH:MI') AS CREATE_DATE,
		       FILE_PATH||CHANGE_NAME AS MEMBER_IMAGE
		FROM REPLY R
		JOIN MEMBER M ON(R.REPLY_WRITER = M.USER_NO)
		LEFT JOIN MEMBER_IMAGE I ON(M.USER_NO = I.REF_UNO)
		WHERE R.REF_BNO = #{boardNo}
		AND R.STATUS IN ('Y', 'W')
		ORDER BY 1 DESC
	</select>
	
	<!-- 댓글 작성  -->
	<insert id="insertReply">
		INSERT INTO REPLY VALUES(SEQ_RNO.NEXTVAL,
								 #{refBno},
								 #{replyContent},
								 #{replyWriter},
								 SYSDATE,
								 'W')
	</insert>
	
	<!-- 댓글 수정  -->
	<update id="updateReply" parameterType="reply">
		UPDATE REPLY
		SET REPLY_CONTENT = #{replyContent}
		WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- 댓글 삭제  -->
	<delete id="deleteReply">
		DELETE REPLY
		WHERE REPLY_NO = #{replyNo}
	</delete>
	
	
</mapper>