<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="qnaBoardMapper">
	
	

	<resultMap type="board" id="qnaBoardResultSet">
    <id property="boardNo" column="BOARD_NO"/>
    <result property="category" column="CATEGORY"/>
    <result property="boardWriter" column="NICKNAME"/>
    <result property="title" column="TITLE"/>
    <result column="content" property="content"/>
    <result property="createDate" column="CREATE_DATE"/>
    <result property="count" column="COUNT"/>
    <result property="liked" column="LIKED"/>
    <result property="notice" column="NOTICE"/>
    <result property="replyCount" column="REPLYCOUNT"/>
	</resultMap>

	<resultMap type="boardAttachment" id="qnaBoardAttachmentResultSet">
	<result column="FILE_NO" property="fileNo"/>
	<result column="REF_BNO" property="refBno"/>
	<result column="ORIGIN_NAME" property="originName"/>
	<result column="CHANGE_NAME" property="changeName"/>
	<result column="FILE_PATH" property="filePath"/>
	<result column="UPLOAD_DATE" property="uploadDate"/>
	<result column="FILE_LEVEL" property="fileLevel"/>
	<result column="STATUS" property="status"/>
	</resultMap>
	
	
	<resultMap type="reply" id="qnaReplyResultSet">
	<result column="REPLY_NO" property="replyNo"/>
	<result column="REF_BNO" property="refBno"/>
	<result column="REPLY_CONTENT" property="replyContent"/>
	<result column="NICKNAME" property="replyWriter"/> <!-- 닉네임으로 조회 -->
	<result column="CREATE_DATE" property="createDate"/>
	<result column="STATUS" property="status"/>
	</resultMap>
	
	<resultMap type="liked" id="qnaLikedResultSet">
	<result column="REF_UNO" property="refUno"/>
	<result column="REF_BNO" property="refBno"/>
	<result column="LIKED_TYPE" property="refBno"/>
	</resultMap>
	
	<!-- 게시글 갯수 select문 -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD
		WHERE STATUS = 'Y'
		AND CATEGORY = 'Q'
	</select>
	
	<!-- 게시글 목록 조회 select문 -->
	<select id="selectList" resultMap="qnaBoardResultSet">
		SELECT BOARD_NO,
        	   TITLE,
        	   NICKNAME,
       		   TO_CHAR(B.CREATE_DATE,'YYYY-MM-DD') AS CREATE_DATE,
       		   B.COUNT,
       		   B.LIKED,
       		   NOTICE,
       		   COUNT(R.REPLY_NO) AS REPLYCOUNT
		FROM BOARD B
		JOIN MEMBER ON (USER_NO = BOARD_WRITER)
		LEFT JOIN REPLY R ON (BOARD_NO = REF_BNO)
		WHERE B.STATUS = 'Y'
		  AND CATEGORY = 'Q'
		GROUP BY BOARD_NO, TITLE, NICKNAME, TO_CHAR(B.CREATE_DATE,'YYYY-MM-DD'), B.COUNT, B.LIKED, NOTICE
		ORDER BY BOARD_NO DESC
	</select>
	
	
	<!-- 게시글 상세 조회 select문 -->
	<select id="selectBoard" resultMap="qnaBoardResultSet">
		SELECT BOARD_NO,
			   TITLE,
			   NICKNAME,
			   CONTENT,
			   COUNT,
			   TO_CHAR(B.CREATE_DATE,'YYYY-MM-DD')"CREATE_DATE",
			   LIKED
		FROM BOARD B
		JOIN MEMBER ON(USER_NO = BOARD_WRITER)
		WHERE BOARD_NO = #{boardNo}
		AND CATEGORY = 'Q'
		AND B.STATUS = 'Y' 
	</select>
	
	<!-- 조회수 증가 update문 -->
	<update id="increaseCount">
		UPDATE BOARD
		SET COUNT = COUNT + 1
		WHERE STATUS = 'Y'
		AND BOARD_NO = #{boardNo}
	</update>
	
	<!-- 첨부파일 유무 확인 select문 -->
	<select id="selectAttachment" resultMap="qnaBoardAttachmentResultSet">
		SELECT FILE_NO,
			   ORIGIN_NAME,
			   CHANGE_NAME,
			   FILE_PATH,
			   UPLOAD_DATE
		FROM BOARD_ATTACHMENT
		WHERE REF_BNO = #{boardNo}
		AND STATUS = 'Y'
	</select>
	
	<!-- 검색 게시글 갯수 select문 -->
	<select id="selectBoardCount" resultType="_int">
		SELECT COUNT(*)
		FROM BOARD B
		JOIN MEMBER M ON (USER_NO=BOARD_WRITER)
		WHERE B.CATEGORY = 'Q'
		AND B.STATUS = 'Y'
		<if test="types == 'writer'">
			AND M.NICKNAME LIKE '%' || #{keyword} || '%'
		</if>
		<if test="types == 'title'">
			AND TITLE LIKE '%' || #{keyword} || '%'
		</if>
		<if test="types == 'content'">
		 	AND CONTENT LIKE '%' || #{keyword} || '%'	
		</if>
	</select>
	
	<!-- 검색 시 게시글 조회 -->
	<select id="selectBoardList" resultMap="qnaBoardResultSet" parameterType="java.util.HashMap">
		SELECT BOARD_NO,
			   TITLE,
			   NICKNAME,
			   COUNT,
			   B.CREATE_DATE
		FROM BOARD B
		JOIN MEMBER M ON(USER_NO = BOARD_WRITER)
		WHERE B.CATEGORY = 'Q'
		AND B.STATUS = 'Y'
		<if test="types == 'writer'">
	        AND M.NICKNAME LIKE '%' || #{keyword} || '%'		
		</if>
		<if test="types == 'title'">
			AND TITLE LIKE '%' || #{keyword} || '%'
		</if>
		<if test="types == 'content'">
		 	AND CONTENT LIKE '%' || #{keyword} || '%'
		
		</if>
		ORDER BY B.CREATE_DATE DESC			   
	</select>
	
	<!-- 댓글 조회 select문 -->
	<select id="selectReply" resultMap="qnaReplyResultSet">
		SELECT REPLY_NO,
			   REPLY_CONTENT,
			   NICKNAME,
			   TO_CHAR(R.CREATE_DATE,'YYYY-MM-DD AMHH:MI')AS CREATE_DATE
		FROM REPLY R
		JOIN MEMBER ON (USER_NO = REPLY_WRITER)
		WHERE R.REF_BNO = #{boardNo}
		AND R.STATUS = 'W'
		ORDER BY R.CREATE_DATE DESC
	</select>
	
	<!-- 댓글 작성 insert문 -->
	<insert id="insertReply">
		INSERT INTO REPLY(REPLY_NO,
						REF_BNO,
						REPLY_CONTENT,
						REPLY_WRITER)
		VALUES(SEQ_RNO.NEXTVAL,
			   #{refBno},
			   #{replyContent},
			   #{replyWriter})
	</insert>
	
	<!-- 게시글 글 작성 insert문 -->
	<insert id="insertBoard">
		INSERT INTO BOARD(BOARD_NO,
						  CATEGORY,
						  BOARD_WRITER,
						  TITLE,
						  CONTENT)
		VALUES(SEQ_BNO.NEXTVAL,
			   'Q',
			   #{boardWriter},
			   #{title},
			   #{content})
	</insert>
	
	<!-- 게시글 파일 첨부 insert문 -->
	<insert id="insertBoardFile">
		INSERT INTO BOARD_ATTACHMENT(FILE_NO,
									 REF_BNO,
									 ORIGIN_NAME,
									 CHANGE_NAME,
									 FILE_PATH)
		VALUES(SEQ_FNO.NEXTVAL,
			   #{refBno},
			   #{originName},
			   #{changeName},
			   #{filePath})
	</insert>
	
	<!-- 공지글 삽입 insert문 -->
	<insert id="insertNotice">
		INSERT INTO BOARD(BOARD_NO,
						  CATEGORY,
						  NICKNAME,
						  TITLE,
						  CONTENT,
						  NOTICE)
		VALUES(SEQ_BNO.NEXTVAL,
			   'Q',
			   #{boardWriter},
			   #{title},
			   #{content},
			   'Y')
	</insert>
	
	<!-- 게시글 추천 중복 방지 select문 -->
	<select id="likeChk" resultType="_int">
		SELECT COUNT(*)
		FROM LIKED
		JOIN BOARD ON (REF_BNO=BOARD_NO)
		WHERE REF_BNO = #{boardNo}
		AND REF_UNO = #{userNo}
		AND CATEGORY = 'Q'
		AND LIKED_TYPE = 1
	</select>
	
	<!-- 게시글 추천 시 LIKE테이블 insert문 -->
	<insert id="insertLike">
		INSERT INTO LIKED(REF_UNO,REF_BNO,LIKED_TYPE)
		VALUES (#{userNo},
				#{boardNo},
				1
		)
	</insert>
	
	<!-- 게시글 추천 수 update문 -->
	<update id="updateLike" parameterType="java.util.HashMap">
		UPDATE BOARD
		SET LIKED = LIKED + 1
		WHERE BOARD_NO = #{boardNo}
		AND CATEGORY = 'Q'
	</update>
	
	<!-- 추천 시 포인트 추가 update문 -->
	<update id="pointUpdate">
		UPDATE MEMBER
		SET POINT = POINT + 100
		WHERE USER_NO =(
		SELECT BOARD_WRITER
		FROM BOARD
<!-- 		WHERE BOARD_WRITER = #{boardWriter} -->
		WHERE BOARD_NO = #{boardNo})
	</update>
	
	<!-- 추천 취소 시 like테이블 update문 -->
<!-- 	<update id="deleteLike"> -->
<!-- 		UPDATE LIKED -->
<!-- 		SET LIKED_TYPE = NULL -->
<!-- 		WHERE REF_BNO = #{boardNo} -->
<!-- 		AND REF_UNO = #{boardWriter} -->
<!-- 	</update> -->
	
	<!-- 추천 취소 시 포인트 차감 update문 -->
	<update id="pointDelete">
		UPDATE MEMBER
		SET POINT = POINT - 100
		WHERE USER_NO =(
		SELECT BOARD_WRITER
		FROM BOARD
<!-- 		WHERE BOARD_WRITER = #{boardWriter} -->
		WHERE BOARD_NO = #{boardNo})
	</update>
	
	<!-- 댓글 수 확인 -->
	<select id="replyCount" resultType="_int">
		SELECT COUNT(*)
		FROM REPLY
		WHERE STATUS = 'W'
		AND REF_BNO = #{refBno}
	</select>
	
	<!-- 좋아요 수 확인 -->
	<select id="getLikeCount" resultType="_int">
		SELECT LIKED
		FROM BOARD
		WHERE CATEGORY = 'Q'
		AND BOARD_NO = #{boardNo}
		AND STATUS = 'Y'
	</select>
	
<!-- 	<select id="countLike" resultType="_int"> -->
<!-- 		SELECT LIKED -->
<!-- 		FROM BOARD -->
<!-- 		WHERE BOARD_NO = #{boardNo} -->
<!-- 		AND CATEGORY = 'Q' -->
<!-- 		AND STATUS = 'Y' -->
<!-- 	</select> -->

	<!-- 댓글 채택 -->
	<insert id="qnaSelect">
		INSERT INTO QNA_SELECT(REPLY_NO,REF_BNO,REPLY_SELECT)
		VALUES(#{replyNo},
			   #{boardNo},
			   'Y'		
		)
	</insert>
	
	<update id="deleteBoard">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE CATEGORY = 'Q'
		AND BOARD_NO = #{boardNo}
	</update>
	
	<select id="chkSelectedReply">
		SELECT REPLY_SELECT
		FROM QNA_SELECT
		WHERE REPLY_NO = #{replyNo}
		AND REF_BNO = #{boardNo}
	</select>
	
</mapper>