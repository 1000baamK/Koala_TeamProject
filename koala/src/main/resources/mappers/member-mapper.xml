<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberMapper">

	<select id="loginMember" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE STATUS = 'Y'
		AND USER_ID = #{userId}
	</select>

	<resultMap type="member" id="memberResultSet">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="NICKNAME" property="nickName"/>
		<result column="EMAIL" property="email"/>
		<result column="INTRODUCE" property="introduce"/>
		<result column="USER_LEVEL" property="userLevel"/>
		<result column="POINT" property="point"/>
		<result column="TYPE" property="type"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="DELETE_DATE" property="deleteDate"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<select id="selectMember" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE STATUS = 'Y'
		AND USER_ID = #{userId}
	</select>
	
	<insert id="insertMember">
		INSERT INTO MEMBER(USER_NO
						  ,USER_ID
						  ,USER_PWD
						  ,NICKNAME
						  ,EMAIL)
		VALUES(SEQ_UNO.NEXTVAL, #{userId}, #{userPwd}, #{nickName}, #{email})
	</insert>
	
	<update id="updateIntroduce">
		UPDATE MEMBER
		SET INTRODUCE = #{introduce}
		WHERE USER_NO = #{userNo}
		AND STATUS = 'Y'
	</update>
	
	<!-- 팔로우가 되어있는지 확인하는 메소드 -->
	<select id="selectFollow" resultType="_int">
		SELECT COUNT(*)
		FROM FOLLOW
		WHERE FROM_USER = #{fromUser}
		AND TO_USER = #{toUser}
	</select>
	
	<!-- 팔로우 하기 -->
	<insert id="addFollow">
		INSERT INTO FOLLOW
		VALUES(#{fromUser}, #{toUser})
	</insert>
	
	<!-- 팔로우 취소하기 -->
	<delete id="removeFollow">
		DELETE FROM FOLLOW
		WHERE FROM_USER = #{fromUser}
		AND TO_USER = #{toUser}
	</delete>
	
	<!-- 팔로우 수 조회 -->
	<select id="selectFollowCount" resultType="_int">
		SELECT COUNT(*)
		FROM FOLLOW
		WHERE TO_USER = #{userNo}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePwd">
		UPDATE MEMBER
		SET USER_PWD = #{userPwd}
		WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 계정 삭제 -->
	<update id="deleteMember">
		UPDATE MEMBER
		SET STATUS = 'N',
			DELETE_DATE = SYSDATE
		WHERE USER_ID = #{userId}
	</update>
	
	<!-- 삭제 대기중인 멤버들 조회 -->
	<select id="selectDeleteMember" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE (SYSDATE-DELETE_DATE)>30
	</select>
	
	<!-- 영구삭제 -->
	<delete id="outMember">
		DELETE FROM MEMBER
		WHERE USER_NO = #{userNo}
		AND STATUS = 'N'
	</delete>
	
	<!-- 입력한 이메일에 대한 데이터가 있는지 조회 있다면 아이디만 가져오기 -->
	<select id="selectEmail" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE EMAIL = #{userEmail}
		AND STATUS = 'Y'
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE USER_ID = #{inputId}
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="nickCheck" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE NICKNAME = #{inputNick}
	</select>
	
	
	<!-- 유저가쓴 게시글 조회 -->
	<select id="boardList" resultMap="boardMapper.boardResultSet">
		SELECT CATEGORY, NICKNAME, TITLE, COUNT, LIKED, B.CREATE_DATE
		FROM BOARD B
		JOIN MEMBER M ON (B.BOARD_WRITER = M.USER_NO)
		WHERE BOARD_WRITER = #{userNo}
		AND B.STATUS = 'Y'
		ORDER BY B.CREATE_DATE DESC
	</select>
	
	
</mapper>